---
version: '3.7'
services:
  ftpd:
    image: docker.io/egdoc/proftpd
    environment:
      FTP_USER: ${FTP_USER:-user}
      FTP_PASS: ${FTP_PASS:-pass}
    ports:
      - ${FTP_HOST_CONTROL_PORT:-21}:21
      - ${FTP_HOST_PASSIVE_PORTS_RANGE:-40000-40009}:40000-40009
    volumes:
      - document_root:/home/${FTP_USER:-user}

  httpd:
    build:
      context: ./httpd/build
    ports:
      - ${HTTPD_HOST_PORT:-80}:80
      - ${HTTPD_HOST_SSL_PORT:-443}:443
    volumes:
      - document_root:/var/www/html
      - phpmyadmin_data:/var/www/phpmyadmin:ro
      - certs:/certs
    depends_on:
      - sslcert-generator
      - php

  php:
    build:
      context: ./php/build
      target: post
      args:
        PHP_VERSION: ${PHP_VERSION:-8.3-fpm}
    user: "1000"
    environment:
      PHP_FPM_MAX_EXECUTION_TIME: ${PHP_FPM_MAX_EXECUTION_TIME:-600}
      PHP_FPM_MEMORY_LIMIT: ${PHP_FPM_MEMORY_LIMIT:-512M}
      PHP_FPM_POST_MAX_SIZE: ${PHP_FPM_POST_MAX_SIZE:-100M}
      PHP_FPM_UPLOAD_LIMIT: ${PHP_FPM_UPLOAD_LIMIT:-100M}
      PHP_FPM_ERROR_REPORTING: ${PHP_FPM_ERROR_REPORTING:-"E_ALL"}
      PHP_FPM_DISPLAY_ERRORS: ${PHP_FPM_DISPLAY_ERRORS:-"On"}
    volumes:
      - document_root:/var/www/html

  db:
    image: docker.io/mariadb:${MYSQL_VERSION:-10.5}
    volumes:
      - db:/var/lib/mysql
    environment:
      TZ: ${TZ:-"Europe/Rome"}
      MYSQL_ALLOW_EMPTY_PASSWORD: ${MYSQL_ALLOW_EMPTY_PASSWORD:-no}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_USER: ${MYSQL_USER:-testuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-testpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-testdb}
    ports:
      - ${MYSQL_HOST_PORT:-3306}:3306

  phpmyadmin:
    image: docker.io/phpmyadmin:fpm
    environment:
      MAX_EXECUTION_TIME: ${PHP_FPM_MAX_EXECUTION_TIME:-600}
      MEMORY_LIMIT: ${PHP_FPM_MEMORY_LIMIT:-512M}
      UPLOAD_LIMIT: ${PHP_FPM_UPLOAD_LIMIT:-100M}
    volumes:
      - phpmyadmin_data:/var/www/html:ro
    depends_on:
      - db

  sslcert-generator:
    image: docker.io/egdoc/docker-sslcert-generator
    environment:
      CERT_DAYS: ${CERT_DAYS:-365}
      CERT_COUNTRY: ${CERT_COUNTRY:-US}
      CERT_STATE: ${CERT_STATE:-"New York"}
      CERT_LOCALITY: ${CERT_LOCALITY:-Brooklin}
      CERT_ORGANIZATION_NAME: ${CERT_ORGANIZATION_NAME:-"Internet Widgits Pty Ltd"}
      CERT_COMMON_NAME: ${CERT_COMMON_NAME:-test.lan}
    volumes:
      - certs:/certs

volumes:
  db:
  phpmyadmin_data:
  certs:
  document_root:
